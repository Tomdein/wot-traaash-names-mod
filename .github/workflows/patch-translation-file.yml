name: patch-gb-translation-file
# run-name:
on:
  push:
    paths:
      - "original-translations/[0-9]+.[0-9]+.[0-9]+.[0-9]/gb_vehicles.mo"
      - "patch-translations/gb_vehicles-patch.po"
  workflow_dispatch:

jobs:
  patch-translation-file:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT

      # Uses the default branch of a public repository
      - name: Checkout repo
        uses: actions/checkout@v4
      # Installs GNU gettext utilities for working with translation files
      # https://www.gnu.org/software/gettext/manual/html_node/index.html#SEC_Contents

      # Finds version from newest directory name and then sets the variable for next steps and sets output for next job
      - name: Get newest version
        id: get-version
        run: |
          cd original-translations
          version=$(ls -1t | head -1)
          echo "version=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Install gettext
        run: sudo apt install gettext
      - name: patch-translation-file
        run: |
          cd ..
          mkdir -p unpacked-translations/$version/
          mkdir -p updated-translations/$version/
          mkdir -p patched-translations/$version/
          msgunfmt --output-file=unpacked-translations/version/gb_vehicles.po original-translations/version/gb_vehicles.mo
          msgmerge --output-file=updated-translations/version/gb_vehicles.po gb_vehicles-patch.po unpacked-translations/version/gb_vehicles.po
          msgfmt --output-file=patched-translations/version/gb_vehicles.mo updated-translations/version/gb_vehicles.po
      - name: Archive patched translations
        uses: actions/upload-artifact@v4
        with: 
          name: patched-gb_vehicle
          path: patched-translations/version/gb_vehicles.mo

  build:
    name: Create Release
    needs: patch-translation-file
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.patch-translation-file.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download result for patch-translation-file
        uses: actions/download-artifact@v4
        with:
          name: patched-gb_vehicle
      - name: Create Release
        id: create_release
        uses: actions/create-release@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Updates wot-traaash-names-mod for WoT version ${{ env.VERSION }}
          draft: false
          prerelease: false